//
//  SearchRouter.swift
//  GithubSearchCleanSwift
//
//  Created by 한지민 on 2022/03/20.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol SearchRoutingLogic {
    func routeToSearchDetail(segue: UIStoryboardSegue?)
}

protocol SearchDataPassing {
    var dataStore: SearchDataStore? { get }
}

class SearchRouter: NSObject, SearchDataPassing {
    weak var viewController: SearchViewController?
    var dataStore: SearchDataStore?
    
    // MARK: Navigation
    
    func navigateToSearchDetail(source: SearchViewController, destination: SearchDetailViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    // MARK: Passing data
    
    func passDataToSearchDetail(source: SearchDataStore, destination: inout SearchDetailDataStore) {
        let selectedRow = viewController?.tableView.indexPathForSelectedRow?.row
        destination.repository = source.repositories[selectedRow!]
    }
}

extension SearchRouter: SearchRoutingLogic {
    // MARK: Routing
    
    func routeToSearchDetail(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! SearchDetailViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToSearchDetail(source: dataStore!, destination: &destinationDS)
        } else {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "SearchDetailViewController") as! SearchDetailViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToSearchDetail(source: dataStore!, destination: &destinationDS)
            navigateToSearchDetail(source: viewController!, destination: destinationVC)
        }
    }
}
