//
//  SearchWorker.swift
//  GithubSearchCleanSwift
//
//  Created by 한지민 on 2022/03/20.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchWorkerProtocol {
    func fetchRepositories(text: String?, completion: @escaping(Result<Search.FetchRepositories.Response, Error>) -> Void)
}

class SearchWorker: SearchWorkerProtocol {
    func fetchRepositories(text: String?, completion: @escaping(Result<Search.FetchRepositories.Response, Error>) -> Void) {
        var urlComponents = URLComponents(string: "https://api.github.com/search/repositories")
        urlComponents?.queryItems = [
            URLQueryItem(name: "q", value: text)
        ]
        
        URLSession.shared.dataTask(with: (urlComponents?.url)!) { data, response, error in
            guard error == nil else {
                completion(.failure(error!))
                return
            }
            
            if let response = response as? HTTPURLResponse, response.statusCode == 200, let data = data {
                do {
                    let searchResponse = try JSONDecoder().decode(Search.FetchRepositories.Response.self, from: data)
                    completion(.success(searchResponse))
                } catch {
                    print("error : \(error.localizedDescription)")
                    completion(.failure(error))
                }
            }
        }.resume()
    }
}
